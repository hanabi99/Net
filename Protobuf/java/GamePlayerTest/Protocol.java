// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protocol.proto

package GamePlayerTest;

public final class Protocol {
  private Protocol() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * <pre>
   *枚举的声明
   * </pre>
   *
   * Protobuf enum {@code GamePlayerTest.TestEnum}
   */
  public enum TestEnum
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     *第一个常量必须映射到0
     * </pre>
     *
     * <code>NORMAL = 0;</code>
     */
    NORMAL(0),
    /**
     * <code>BOSS = 5;</code>
     */
    BOSS(5),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     *第一个常量必须映射到0
     * </pre>
     *
     * <code>NORMAL = 0;</code>
     */
    public static final int NORMAL_VALUE = 0;
    /**
     * <code>BOSS = 5;</code>
     */
    public static final int BOSS_VALUE = 5;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static TestEnum valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static TestEnum forNumber(int value) {
      switch (value) {
        case 0: return NORMAL;
        case 5: return BOSS;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<TestEnum>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        TestEnum> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<TestEnum>() {
            public TestEnum findValueByNumber(int number) {
              return TestEnum.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return GamePlayerTest.Protocol.getDescriptor().getEnumTypes().get(0);
    }

    private static final TestEnum[] VALUES = values();

    public static TestEnum valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private TestEnum(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:GamePlayerTest.TestEnum)
  }

  public interface TestMsgOrBuilder extends
      // @@protoc_insertion_point(interface_extends:GamePlayerTest.TestMsg)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *规则五：成员类型 和 唯一编号
     *浮点数
     * = 1 不代表默认值 而是代表唯一编号 方便我们进行序列化和反序列化的处理
     *required 必须赋值的字段 proto2
     * </pre>
     *
     * <code>float testF = 1;</code>
     * @return The testF.
     */
    float getTestF();

    /**
     * <pre>
     *optional 可以不赋值的字段
     * </pre>
     *
     * <code>optional double testD = 2;</code>
     * @return Whether the testD field is set.
     */
    boolean hasTestD();
    /**
     * <pre>
     *optional 可以不赋值的字段
     * </pre>
     *
     * <code>optional double testD = 2;</code>
     * @return The testD.
     */
    double getTestD();

    /**
     * <pre>
     *变长编码
     *所谓变长 就是会根据 数字的大小 来使用对应的字节数来存储  1 2 4 
     *Protobuf帮助我们优化的部分 可以尽量少的使用字节数 来存储内容
     * </pre>
     *
     * <code>int32 testInt32 = 3;</code>
     * @return The testInt32.
     */
    int getTestInt32();

    /**
     * <pre>
     *1 2 4 8
     * </pre>
     *
     * <code>int64 testInt64 = 4;</code>
     * @return The testInt64.
     */
    long getTestInt64();

    /**
     * <pre>
     *更实用与表示负数类型的整数
     * </pre>
     *
     * <code>sint32 testSInt32 = 5;</code>
     * @return The testSInt32.
     */
    int getTestSInt32();

    /**
     * <pre>
     *C# - long 适用于来表示负数的整数
     * </pre>
     *
     * <code>sint64 testSInt64 = 6;</code>
     * @return The testSInt64.
     */
    long getTestSInt64();

    /**
     * <pre>
     *无符号 变长编码
     *1 2 4
     * </pre>
     *
     * <code>uint32 testUInt = 7;</code>
     * @return The testUInt.
     */
    int getTestUInt();

    /**
     * <pre>
     *C# - ulong 变长的编码
     * </pre>
     *
     * <code>uint64 testULong = 8;</code>
     * @return The testULong.
     */
    long getTestULong();

    /**
     * <pre>
     *固定字节数的类型
     * </pre>
     *
     * <code>fixed32 testFixed32 = 9;</code>
     * @return The testFixed32.
     */
    int getTestFixed32();

    /**
     * <pre>
     *C# -ulong 它通常用来表示大于2的56次方的数 ，比uint64更有效 始终是8个字节
     * </pre>
     *
     * <code>fixed64 testFixed64 = 10;</code>
     * @return The testFixed64.
     */
    long getTestFixed64();

    /**
     * <pre>
     *C# - int 始终4个字节
     * </pre>
     *
     * <code>sfixed32 testSFixed32 = 11;</code>
     * @return The testSFixed32.
     */
    int getTestSFixed32();

    /**
     * <pre>
     *C# - long 始终8个字节
     * </pre>
     *
     * <code>sfixed64 testSFixed64 = 12;</code>
     * @return The testSFixed64.
     */
    long getTestSFixed64();

    /**
     * <pre>
     *其它类型
     * </pre>
     *
     * <code>bool testBool = 13;</code>
     * @return The testBool.
     */
    boolean getTestBool();

    /**
     * <pre>
     *C# - string
     * </pre>
     *
     * <code>string testStr = 14;</code>
     * @return The testStr.
     */
    java.lang.String getTestStr();
    /**
     * <pre>
     *C# - string
     * </pre>
     *
     * <code>string testStr = 14;</code>
     * @return The bytes for testStr.
     */
    com.google.protobuf.ByteString
        getTestStrBytes();

    /**
     * <pre>
     *C# - BytesString 字节字符串
     * </pre>
     *
     * <code>bytes testBytes = 15;</code>
     * @return The testBytes.
     */
    com.google.protobuf.ByteString getTestBytes();

    /**
     * <pre>
     *数组List
     * </pre>
     *
     * <code>repeated int32 listInt = 16;</code>
     * @return A list containing the listInt.
     */
    java.util.List<java.lang.Integer> getListIntList();
    /**
     * <pre>
     *数组List
     * </pre>
     *
     * <code>repeated int32 listInt = 16;</code>
     * @return The count of listInt.
     */
    int getListIntCount();
    /**
     * <pre>
     *数组List
     * </pre>
     *
     * <code>repeated int32 listInt = 16;</code>
     * @param index The index of the element to return.
     * @return The listInt at the given index.
     */
    int getListInt(int index);

    /**
     * <pre>
     *字典Dictionary
     * </pre>
     *
     * <code>map&lt;int32, string&gt; testMap = 17;</code>
     */
    int getTestMapCount();
    /**
     * <pre>
     *字典Dictionary
     * </pre>
     *
     * <code>map&lt;int32, string&gt; testMap = 17;</code>
     */
    boolean containsTestMap(
        int key);
    /**
     * Use {@link #getTestMapMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, java.lang.String>
    getTestMap();
    /**
     * <pre>
     *字典Dictionary
     * </pre>
     *
     * <code>map&lt;int32, string&gt; testMap = 17;</code>
     */
    java.util.Map<java.lang.Integer, java.lang.String>
    getTestMapMap();
    /**
     * <pre>
     *字典Dictionary
     * </pre>
     *
     * <code>map&lt;int32, string&gt; testMap = 17;</code>
     */

    /* nullable */
java.lang.String getTestMapOrDefault(
        int key,
        /* nullable */
java.lang.String defaultValue);
    /**
     * <pre>
     *字典Dictionary
     * </pre>
     *
     * <code>map&lt;int32, string&gt; testMap = 17;</code>
     */

    java.lang.String getTestMapOrThrow(
        int key);

    /**
     * <pre>
     *枚举成员变量的声明 需要唯一编码
     * </pre>
     *
     * <code>.GamePlayerTest.TestEnum testEnum = 18;</code>
     * @return The enum numeric value on the wire for testEnum.
     */
    int getTestEnumValue();
    /**
     * <pre>
     *枚举成员变量的声明 需要唯一编码
     * </pre>
     *
     * <code>.GamePlayerTest.TestEnum testEnum = 18;</code>
     * @return The testEnum.
     */
    GamePlayerTest.Protocol.TestEnum getTestEnum();

    /**
     * <pre>
     *声明自定义类对象 需要唯一编码
     *默认值是null
     * </pre>
     *
     * <code>.GamePlayerTest.TestMsg2 testMsg2 = 19;</code>
     * @return Whether the testMsg2 field is set.
     */
    boolean hasTestMsg2();
    /**
     * <pre>
     *声明自定义类对象 需要唯一编码
     *默认值是null
     * </pre>
     *
     * <code>.GamePlayerTest.TestMsg2 testMsg2 = 19;</code>
     * @return The testMsg2.
     */
    GamePlayerTest.Protocol.TestMsg2 getTestMsg2();
    /**
     * <pre>
     *声明自定义类对象 需要唯一编码
     *默认值是null
     * </pre>
     *
     * <code>.GamePlayerTest.TestMsg2 testMsg2 = 19;</code>
     */
    GamePlayerTest.Protocol.TestMsg2OrBuilder getTestMsg2OrBuilder();

    /**
     * <code>.GamePlayerTest.TestMsg.TestMsg3 testMsg3 = 20;</code>
     * @return Whether the testMsg3 field is set.
     */
    boolean hasTestMsg3();
    /**
     * <code>.GamePlayerTest.TestMsg.TestMsg3 testMsg3 = 20;</code>
     * @return The testMsg3.
     */
    GamePlayerTest.Protocol.TestMsg.TestMsg3 getTestMsg3();
    /**
     * <code>.GamePlayerTest.TestMsg.TestMsg3 testMsg3 = 20;</code>
     */
    GamePlayerTest.Protocol.TestMsg.TestMsg3OrBuilder getTestMsg3OrBuilder();

    /**
     * <code>.GamePlayerTest.TestMsg.TestEnum2 testEnum2 = 21;</code>
     * @return The enum numeric value on the wire for testEnum2.
     */
    int getTestEnum2Value();
    /**
     * <code>.GamePlayerTest.TestMsg.TestEnum2 testEnum2 = 21;</code>
     * @return The testEnum2.
     */
    GamePlayerTest.Protocol.TestMsg.TestEnum2 getTestEnum2();

    /**
     * <code>bool testBool2123123 = 23;</code>
     * @return The testBool2123123.
     */
    boolean getTestBool2123123();

    /**
     * <code>.GameSystemTest.HeartMsg testHeart = 24;</code>
     * @return Whether the testHeart field is set.
     */
    boolean hasTestHeart();
    /**
     * <code>.GameSystemTest.HeartMsg testHeart = 24;</code>
     * @return The testHeart.
     */
    GameSystemTest.Test2.HeartMsg getTestHeart();
    /**
     * <code>.GameSystemTest.HeartMsg testHeart = 24;</code>
     */
    GameSystemTest.Test2.HeartMsgOrBuilder getTestHeartOrBuilder();
  }
  /**
   * <pre>
   *规则四：消息类
   * </pre>
   *
   * Protobuf type {@code GamePlayerTest.TestMsg}
   */
  public static final class TestMsg extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:GamePlayerTest.TestMsg)
      TestMsgOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use TestMsg.newBuilder() to construct.
    private TestMsg(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TestMsg() {
      testStr_ = "";
      testBytes_ = com.google.protobuf.ByteString.EMPTY;
      listInt_ = emptyIntList();
      testEnum_ = 0;
      testEnum2_ = 0;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new TestMsg();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private TestMsg(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 13: {

              testF_ = input.readFloat();
              break;
            }
            case 17: {
              bitField0_ |= 0x00000001;
              testD_ = input.readDouble();
              break;
            }
            case 24: {

              testInt32_ = input.readInt32();
              break;
            }
            case 32: {

              testInt64_ = input.readInt64();
              break;
            }
            case 40: {

              testSInt32_ = input.readSInt32();
              break;
            }
            case 48: {

              testSInt64_ = input.readSInt64();
              break;
            }
            case 56: {

              testUInt_ = input.readUInt32();
              break;
            }
            case 64: {

              testULong_ = input.readUInt64();
              break;
            }
            case 77: {

              testFixed32_ = input.readFixed32();
              break;
            }
            case 81: {

              testFixed64_ = input.readFixed64();
              break;
            }
            case 93: {

              testSFixed32_ = input.readSFixed32();
              break;
            }
            case 97: {

              testSFixed64_ = input.readSFixed64();
              break;
            }
            case 104: {

              testBool_ = input.readBool();
              break;
            }
            case 114: {
              java.lang.String s = input.readStringRequireUtf8();

              testStr_ = s;
              break;
            }
            case 122: {

              testBytes_ = input.readBytes();
              break;
            }
            case 128: {
              if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                listInt_ = newIntList();
                mutable_bitField0_ |= 0x00000002;
              }
              listInt_.addInt(input.readInt32());
              break;
            }
            case 130: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) != 0) && input.getBytesUntilLimit() > 0) {
                listInt_ = newIntList();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                listInt_.addInt(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 138: {
              if (!((mutable_bitField0_ & 0x00000004) != 0)) {
                testMap_ = com.google.protobuf.MapField.newMapField(
                    TestMapDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000004;
              }
              com.google.protobuf.MapEntry<java.lang.Integer, java.lang.String>
              testMap__ = input.readMessage(
                  TestMapDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              testMap_.getMutableMap().put(
                  testMap__.getKey(), testMap__.getValue());
              break;
            }
            case 144: {
              int rawValue = input.readEnum();

              testEnum_ = rawValue;
              break;
            }
            case 154: {
              GamePlayerTest.Protocol.TestMsg2.Builder subBuilder = null;
              if (testMsg2_ != null) {
                subBuilder = testMsg2_.toBuilder();
              }
              testMsg2_ = input.readMessage(GamePlayerTest.Protocol.TestMsg2.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(testMsg2_);
                testMsg2_ = subBuilder.buildPartial();
              }

              break;
            }
            case 162: {
              GamePlayerTest.Protocol.TestMsg.TestMsg3.Builder subBuilder = null;
              if (testMsg3_ != null) {
                subBuilder = testMsg3_.toBuilder();
              }
              testMsg3_ = input.readMessage(GamePlayerTest.Protocol.TestMsg.TestMsg3.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(testMsg3_);
                testMsg3_ = subBuilder.buildPartial();
              }

              break;
            }
            case 168: {
              int rawValue = input.readEnum();

              testEnum2_ = rawValue;
              break;
            }
            case 184: {

              testBool2123123_ = input.readBool();
              break;
            }
            case 194: {
              GameSystemTest.Test2.HeartMsg.Builder subBuilder = null;
              if (testHeart_ != null) {
                subBuilder = testHeart_.toBuilder();
              }
              testHeart_ = input.readMessage(GameSystemTest.Test2.HeartMsg.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(testHeart_);
                testHeart_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) != 0)) {
          listInt_.makeImmutable(); // C
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return GamePlayerTest.Protocol.internal_static_GamePlayerTest_TestMsg_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    @java.lang.Override
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 17:
          return internalGetTestMap();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return GamePlayerTest.Protocol.internal_static_GamePlayerTest_TestMsg_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              GamePlayerTest.Protocol.TestMsg.class, GamePlayerTest.Protocol.TestMsg.Builder.class);
    }

    /**
     * <pre>
     *规则9：允许嵌套
     * </pre>
     *
     * Protobuf enum {@code GamePlayerTest.TestMsg.TestEnum2}
     */
    public enum TestEnum2
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <pre>
       *第一个常量必须映射到0
       * </pre>
       *
       * <code>NORMAL = 0;</code>
       */
      NORMAL(0),
      /**
       * <code>BOSS = 1;</code>
       */
      BOSS(1),
      UNRECOGNIZED(-1),
      ;

      /**
       * <pre>
       *第一个常量必须映射到0
       * </pre>
       *
       * <code>NORMAL = 0;</code>
       */
      public static final int NORMAL_VALUE = 0;
      /**
       * <code>BOSS = 1;</code>
       */
      public static final int BOSS_VALUE = 1;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static TestEnum2 valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static TestEnum2 forNumber(int value) {
        switch (value) {
          case 0: return NORMAL;
          case 1: return BOSS;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<TestEnum2>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          TestEnum2> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<TestEnum2>() {
              public TestEnum2 findValueByNumber(int number) {
                return TestEnum2.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalStateException(
              "Can't get the descriptor of an unrecognized enum value.");
        }
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return GamePlayerTest.Protocol.TestMsg.getDescriptor().getEnumTypes().get(0);
      }

      private static final TestEnum2[] VALUES = values();

      public static TestEnum2 valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private TestEnum2(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:GamePlayerTest.TestMsg.TestEnum2)
    }

    public interface TestMsg3OrBuilder extends
        // @@protoc_insertion_point(interface_extends:GamePlayerTest.TestMsg.TestMsg3)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>int32 testInt32 = 1;</code>
       * @return The testInt32.
       */
      int getTestInt32();
    }
    /**
     * <pre>
     *规则9：允许嵌套
     *嵌套一个类在另一个类当中 相当于是内部类
     * </pre>
     *
     * Protobuf type {@code GamePlayerTest.TestMsg.TestMsg3}
     */
    public static final class TestMsg3 extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:GamePlayerTest.TestMsg.TestMsg3)
        TestMsg3OrBuilder {
    private static final long serialVersionUID = 0L;
      // Use TestMsg3.newBuilder() to construct.
      private TestMsg3(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private TestMsg3() {
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new TestMsg3();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private TestMsg3(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {

                testInt32_ = input.readInt32();
                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return GamePlayerTest.Protocol.internal_static_GamePlayerTest_TestMsg_TestMsg3_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return GamePlayerTest.Protocol.internal_static_GamePlayerTest_TestMsg_TestMsg3_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                GamePlayerTest.Protocol.TestMsg.TestMsg3.class, GamePlayerTest.Protocol.TestMsg.TestMsg3.Builder.class);
      }

      public static final int TESTINT32_FIELD_NUMBER = 1;
      private int testInt32_;
      /**
       * <code>int32 testInt32 = 1;</code>
       * @return The testInt32.
       */
      @java.lang.Override
      public int getTestInt32() {
        return testInt32_;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (testInt32_ != 0) {
          output.writeInt32(1, testInt32_);
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (testInt32_ != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(1, testInt32_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof GamePlayerTest.Protocol.TestMsg.TestMsg3)) {
          return super.equals(obj);
        }
        GamePlayerTest.Protocol.TestMsg.TestMsg3 other = (GamePlayerTest.Protocol.TestMsg.TestMsg3) obj;

        if (getTestInt32()
            != other.getTestInt32()) return false;
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + TESTINT32_FIELD_NUMBER;
        hash = (53 * hash) + getTestInt32();
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static GamePlayerTest.Protocol.TestMsg.TestMsg3 parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static GamePlayerTest.Protocol.TestMsg.TestMsg3 parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static GamePlayerTest.Protocol.TestMsg.TestMsg3 parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static GamePlayerTest.Protocol.TestMsg.TestMsg3 parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static GamePlayerTest.Protocol.TestMsg.TestMsg3 parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static GamePlayerTest.Protocol.TestMsg.TestMsg3 parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static GamePlayerTest.Protocol.TestMsg.TestMsg3 parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static GamePlayerTest.Protocol.TestMsg.TestMsg3 parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static GamePlayerTest.Protocol.TestMsg.TestMsg3 parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static GamePlayerTest.Protocol.TestMsg.TestMsg3 parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static GamePlayerTest.Protocol.TestMsg.TestMsg3 parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static GamePlayerTest.Protocol.TestMsg.TestMsg3 parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(GamePlayerTest.Protocol.TestMsg.TestMsg3 prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * <pre>
       *规则9：允许嵌套
       *嵌套一个类在另一个类当中 相当于是内部类
       * </pre>
       *
       * Protobuf type {@code GamePlayerTest.TestMsg.TestMsg3}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:GamePlayerTest.TestMsg.TestMsg3)
          GamePlayerTest.Protocol.TestMsg.TestMsg3OrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return GamePlayerTest.Protocol.internal_static_GamePlayerTest_TestMsg_TestMsg3_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return GamePlayerTest.Protocol.internal_static_GamePlayerTest_TestMsg_TestMsg3_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  GamePlayerTest.Protocol.TestMsg.TestMsg3.class, GamePlayerTest.Protocol.TestMsg.TestMsg3.Builder.class);
        }

        // Construct using GamePlayerTest.Protocol.TestMsg.TestMsg3.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          testInt32_ = 0;

          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return GamePlayerTest.Protocol.internal_static_GamePlayerTest_TestMsg_TestMsg3_descriptor;
        }

        @java.lang.Override
        public GamePlayerTest.Protocol.TestMsg.TestMsg3 getDefaultInstanceForType() {
          return GamePlayerTest.Protocol.TestMsg.TestMsg3.getDefaultInstance();
        }

        @java.lang.Override
        public GamePlayerTest.Protocol.TestMsg.TestMsg3 build() {
          GamePlayerTest.Protocol.TestMsg.TestMsg3 result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public GamePlayerTest.Protocol.TestMsg.TestMsg3 buildPartial() {
          GamePlayerTest.Protocol.TestMsg.TestMsg3 result = new GamePlayerTest.Protocol.TestMsg.TestMsg3(this);
          result.testInt32_ = testInt32_;
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof GamePlayerTest.Protocol.TestMsg.TestMsg3) {
            return mergeFrom((GamePlayerTest.Protocol.TestMsg.TestMsg3)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(GamePlayerTest.Protocol.TestMsg.TestMsg3 other) {
          if (other == GamePlayerTest.Protocol.TestMsg.TestMsg3.getDefaultInstance()) return this;
          if (other.getTestInt32() != 0) {
            setTestInt32(other.getTestInt32());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          GamePlayerTest.Protocol.TestMsg.TestMsg3 parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (GamePlayerTest.Protocol.TestMsg.TestMsg3) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private int testInt32_ ;
        /**
         * <code>int32 testInt32 = 1;</code>
         * @return The testInt32.
         */
        @java.lang.Override
        public int getTestInt32() {
          return testInt32_;
        }
        /**
         * <code>int32 testInt32 = 1;</code>
         * @param value The testInt32 to set.
         * @return This builder for chaining.
         */
        public Builder setTestInt32(int value) {
          
          testInt32_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>int32 testInt32 = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearTestInt32() {
          
          testInt32_ = 0;
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:GamePlayerTest.TestMsg.TestMsg3)
      }

      // @@protoc_insertion_point(class_scope:GamePlayerTest.TestMsg.TestMsg3)
      private static final GamePlayerTest.Protocol.TestMsg.TestMsg3 DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new GamePlayerTest.Protocol.TestMsg.TestMsg3();
      }

      public static GamePlayerTest.Protocol.TestMsg.TestMsg3 getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<TestMsg3>
          PARSER = new com.google.protobuf.AbstractParser<TestMsg3>() {
        @java.lang.Override
        public TestMsg3 parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new TestMsg3(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<TestMsg3> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<TestMsg3> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public GamePlayerTest.Protocol.TestMsg.TestMsg3 getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    private int bitField0_;
    public static final int TESTF_FIELD_NUMBER = 1;
    private float testF_;
    /**
     * <pre>
     *规则五：成员类型 和 唯一编号
     *浮点数
     * = 1 不代表默认值 而是代表唯一编号 方便我们进行序列化和反序列化的处理
     *required 必须赋值的字段 proto2
     * </pre>
     *
     * <code>float testF = 1;</code>
     * @return The testF.
     */
    @java.lang.Override
    public float getTestF() {
      return testF_;
    }

    public static final int TESTD_FIELD_NUMBER = 2;
    private double testD_;
    /**
     * <pre>
     *optional 可以不赋值的字段
     * </pre>
     *
     * <code>optional double testD = 2;</code>
     * @return Whether the testD field is set.
     */
    @java.lang.Override
    public boolean hasTestD() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     *optional 可以不赋值的字段
     * </pre>
     *
     * <code>optional double testD = 2;</code>
     * @return The testD.
     */
    @java.lang.Override
    public double getTestD() {
      return testD_;
    }

    public static final int TESTINT32_FIELD_NUMBER = 3;
    private int testInt32_;
    /**
     * <pre>
     *变长编码
     *所谓变长 就是会根据 数字的大小 来使用对应的字节数来存储  1 2 4 
     *Protobuf帮助我们优化的部分 可以尽量少的使用字节数 来存储内容
     * </pre>
     *
     * <code>int32 testInt32 = 3;</code>
     * @return The testInt32.
     */
    @java.lang.Override
    public int getTestInt32() {
      return testInt32_;
    }

    public static final int TESTINT64_FIELD_NUMBER = 4;
    private long testInt64_;
    /**
     * <pre>
     *1 2 4 8
     * </pre>
     *
     * <code>int64 testInt64 = 4;</code>
     * @return The testInt64.
     */
    @java.lang.Override
    public long getTestInt64() {
      return testInt64_;
    }

    public static final int TESTSINT32_FIELD_NUMBER = 5;
    private int testSInt32_;
    /**
     * <pre>
     *更实用与表示负数类型的整数
     * </pre>
     *
     * <code>sint32 testSInt32 = 5;</code>
     * @return The testSInt32.
     */
    @java.lang.Override
    public int getTestSInt32() {
      return testSInt32_;
    }

    public static final int TESTSINT64_FIELD_NUMBER = 6;
    private long testSInt64_;
    /**
     * <pre>
     *C# - long 适用于来表示负数的整数
     * </pre>
     *
     * <code>sint64 testSInt64 = 6;</code>
     * @return The testSInt64.
     */
    @java.lang.Override
    public long getTestSInt64() {
      return testSInt64_;
    }

    public static final int TESTUINT_FIELD_NUMBER = 7;
    private int testUInt_;
    /**
     * <pre>
     *无符号 变长编码
     *1 2 4
     * </pre>
     *
     * <code>uint32 testUInt = 7;</code>
     * @return The testUInt.
     */
    @java.lang.Override
    public int getTestUInt() {
      return testUInt_;
    }

    public static final int TESTULONG_FIELD_NUMBER = 8;
    private long testULong_;
    /**
     * <pre>
     *C# - ulong 变长的编码
     * </pre>
     *
     * <code>uint64 testULong = 8;</code>
     * @return The testULong.
     */
    @java.lang.Override
    public long getTestULong() {
      return testULong_;
    }

    public static final int TESTFIXED32_FIELD_NUMBER = 9;
    private int testFixed32_;
    /**
     * <pre>
     *固定字节数的类型
     * </pre>
     *
     * <code>fixed32 testFixed32 = 9;</code>
     * @return The testFixed32.
     */
    @java.lang.Override
    public int getTestFixed32() {
      return testFixed32_;
    }

    public static final int TESTFIXED64_FIELD_NUMBER = 10;
    private long testFixed64_;
    /**
     * <pre>
     *C# -ulong 它通常用来表示大于2的56次方的数 ，比uint64更有效 始终是8个字节
     * </pre>
     *
     * <code>fixed64 testFixed64 = 10;</code>
     * @return The testFixed64.
     */
    @java.lang.Override
    public long getTestFixed64() {
      return testFixed64_;
    }

    public static final int TESTSFIXED32_FIELD_NUMBER = 11;
    private int testSFixed32_;
    /**
     * <pre>
     *C# - int 始终4个字节
     * </pre>
     *
     * <code>sfixed32 testSFixed32 = 11;</code>
     * @return The testSFixed32.
     */
    @java.lang.Override
    public int getTestSFixed32() {
      return testSFixed32_;
    }

    public static final int TESTSFIXED64_FIELD_NUMBER = 12;
    private long testSFixed64_;
    /**
     * <pre>
     *C# - long 始终8个字节
     * </pre>
     *
     * <code>sfixed64 testSFixed64 = 12;</code>
     * @return The testSFixed64.
     */
    @java.lang.Override
    public long getTestSFixed64() {
      return testSFixed64_;
    }

    public static final int TESTBOOL_FIELD_NUMBER = 13;
    private boolean testBool_;
    /**
     * <pre>
     *其它类型
     * </pre>
     *
     * <code>bool testBool = 13;</code>
     * @return The testBool.
     */
    @java.lang.Override
    public boolean getTestBool() {
      return testBool_;
    }

    public static final int TESTSTR_FIELD_NUMBER = 14;
    private volatile java.lang.Object testStr_;
    /**
     * <pre>
     *C# - string
     * </pre>
     *
     * <code>string testStr = 14;</code>
     * @return The testStr.
     */
    @java.lang.Override
    public java.lang.String getTestStr() {
      java.lang.Object ref = testStr_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        testStr_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *C# - string
     * </pre>
     *
     * <code>string testStr = 14;</code>
     * @return The bytes for testStr.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getTestStrBytes() {
      java.lang.Object ref = testStr_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        testStr_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TESTBYTES_FIELD_NUMBER = 15;
    private com.google.protobuf.ByteString testBytes_;
    /**
     * <pre>
     *C# - BytesString 字节字符串
     * </pre>
     *
     * <code>bytes testBytes = 15;</code>
     * @return The testBytes.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getTestBytes() {
      return testBytes_;
    }

    public static final int LISTINT_FIELD_NUMBER = 16;
    private com.google.protobuf.Internal.IntList listInt_;
    /**
     * <pre>
     *数组List
     * </pre>
     *
     * <code>repeated int32 listInt = 16;</code>
     * @return A list containing the listInt.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
        getListIntList() {
      return listInt_;
    }
    /**
     * <pre>
     *数组List
     * </pre>
     *
     * <code>repeated int32 listInt = 16;</code>
     * @return The count of listInt.
     */
    public int getListIntCount() {
      return listInt_.size();
    }
    /**
     * <pre>
     *数组List
     * </pre>
     *
     * <code>repeated int32 listInt = 16;</code>
     * @param index The index of the element to return.
     * @return The listInt at the given index.
     */
    public int getListInt(int index) {
      return listInt_.getInt(index);
    }
    private int listIntMemoizedSerializedSize = -1;

    public static final int TESTMAP_FIELD_NUMBER = 17;
    private static final class TestMapDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Integer, java.lang.String> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Integer, java.lang.String>newDefaultInstance(
                  GamePlayerTest.Protocol.internal_static_GamePlayerTest_TestMsg_TestMapEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "");
    }
    private com.google.protobuf.MapField<
        java.lang.Integer, java.lang.String> testMap_;
    private com.google.protobuf.MapField<java.lang.Integer, java.lang.String>
    internalGetTestMap() {
      if (testMap_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            TestMapDefaultEntryHolder.defaultEntry);
      }
      return testMap_;
    }

    public int getTestMapCount() {
      return internalGetTestMap().getMap().size();
    }
    /**
     * <pre>
     *字典Dictionary
     * </pre>
     *
     * <code>map&lt;int32, string&gt; testMap = 17;</code>
     */

    @java.lang.Override
    public boolean containsTestMap(
        int key) {
      
      return internalGetTestMap().getMap().containsKey(key);
    }
    /**
     * Use {@link #getTestMapMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, java.lang.String> getTestMap() {
      return getTestMapMap();
    }
    /**
     * <pre>
     *字典Dictionary
     * </pre>
     *
     * <code>map&lt;int32, string&gt; testMap = 17;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.Integer, java.lang.String> getTestMapMap() {
      return internalGetTestMap().getMap();
    }
    /**
     * <pre>
     *字典Dictionary
     * </pre>
     *
     * <code>map&lt;int32, string&gt; testMap = 17;</code>
     */
    @java.lang.Override

    public java.lang.String getTestMapOrDefault(
        int key,
        java.lang.String defaultValue) {
      
      java.util.Map<java.lang.Integer, java.lang.String> map =
          internalGetTestMap().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     *字典Dictionary
     * </pre>
     *
     * <code>map&lt;int32, string&gt; testMap = 17;</code>
     */
    @java.lang.Override

    public java.lang.String getTestMapOrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, java.lang.String> map =
          internalGetTestMap().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int TESTENUM_FIELD_NUMBER = 18;
    private int testEnum_;
    /**
     * <pre>
     *枚举成员变量的声明 需要唯一编码
     * </pre>
     *
     * <code>.GamePlayerTest.TestEnum testEnum = 18;</code>
     * @return The enum numeric value on the wire for testEnum.
     */
    @java.lang.Override public int getTestEnumValue() {
      return testEnum_;
    }
    /**
     * <pre>
     *枚举成员变量的声明 需要唯一编码
     * </pre>
     *
     * <code>.GamePlayerTest.TestEnum testEnum = 18;</code>
     * @return The testEnum.
     */
    @java.lang.Override public GamePlayerTest.Protocol.TestEnum getTestEnum() {
      @SuppressWarnings("deprecation")
      GamePlayerTest.Protocol.TestEnum result = GamePlayerTest.Protocol.TestEnum.valueOf(testEnum_);
      return result == null ? GamePlayerTest.Protocol.TestEnum.UNRECOGNIZED : result;
    }

    public static final int TESTMSG2_FIELD_NUMBER = 19;
    private GamePlayerTest.Protocol.TestMsg2 testMsg2_;
    /**
     * <pre>
     *声明自定义类对象 需要唯一编码
     *默认值是null
     * </pre>
     *
     * <code>.GamePlayerTest.TestMsg2 testMsg2 = 19;</code>
     * @return Whether the testMsg2 field is set.
     */
    @java.lang.Override
    public boolean hasTestMsg2() {
      return testMsg2_ != null;
    }
    /**
     * <pre>
     *声明自定义类对象 需要唯一编码
     *默认值是null
     * </pre>
     *
     * <code>.GamePlayerTest.TestMsg2 testMsg2 = 19;</code>
     * @return The testMsg2.
     */
    @java.lang.Override
    public GamePlayerTest.Protocol.TestMsg2 getTestMsg2() {
      return testMsg2_ == null ? GamePlayerTest.Protocol.TestMsg2.getDefaultInstance() : testMsg2_;
    }
    /**
     * <pre>
     *声明自定义类对象 需要唯一编码
     *默认值是null
     * </pre>
     *
     * <code>.GamePlayerTest.TestMsg2 testMsg2 = 19;</code>
     */
    @java.lang.Override
    public GamePlayerTest.Protocol.TestMsg2OrBuilder getTestMsg2OrBuilder() {
      return getTestMsg2();
    }

    public static final int TESTMSG3_FIELD_NUMBER = 20;
    private GamePlayerTest.Protocol.TestMsg.TestMsg3 testMsg3_;
    /**
     * <code>.GamePlayerTest.TestMsg.TestMsg3 testMsg3 = 20;</code>
     * @return Whether the testMsg3 field is set.
     */
    @java.lang.Override
    public boolean hasTestMsg3() {
      return testMsg3_ != null;
    }
    /**
     * <code>.GamePlayerTest.TestMsg.TestMsg3 testMsg3 = 20;</code>
     * @return The testMsg3.
     */
    @java.lang.Override
    public GamePlayerTest.Protocol.TestMsg.TestMsg3 getTestMsg3() {
      return testMsg3_ == null ? GamePlayerTest.Protocol.TestMsg.TestMsg3.getDefaultInstance() : testMsg3_;
    }
    /**
     * <code>.GamePlayerTest.TestMsg.TestMsg3 testMsg3 = 20;</code>
     */
    @java.lang.Override
    public GamePlayerTest.Protocol.TestMsg.TestMsg3OrBuilder getTestMsg3OrBuilder() {
      return getTestMsg3();
    }

    public static final int TESTENUM2_FIELD_NUMBER = 21;
    private int testEnum2_;
    /**
     * <code>.GamePlayerTest.TestMsg.TestEnum2 testEnum2 = 21;</code>
     * @return The enum numeric value on the wire for testEnum2.
     */
    @java.lang.Override public int getTestEnum2Value() {
      return testEnum2_;
    }
    /**
     * <code>.GamePlayerTest.TestMsg.TestEnum2 testEnum2 = 21;</code>
     * @return The testEnum2.
     */
    @java.lang.Override public GamePlayerTest.Protocol.TestMsg.TestEnum2 getTestEnum2() {
      @SuppressWarnings("deprecation")
      GamePlayerTest.Protocol.TestMsg.TestEnum2 result = GamePlayerTest.Protocol.TestMsg.TestEnum2.valueOf(testEnum2_);
      return result == null ? GamePlayerTest.Protocol.TestMsg.TestEnum2.UNRECOGNIZED : result;
    }

    public static final int TESTBOOL2123123_FIELD_NUMBER = 23;
    private boolean testBool2123123_;
    /**
     * <code>bool testBool2123123 = 23;</code>
     * @return The testBool2123123.
     */
    @java.lang.Override
    public boolean getTestBool2123123() {
      return testBool2123123_;
    }

    public static final int TESTHEART_FIELD_NUMBER = 24;
    private GameSystemTest.Test2.HeartMsg testHeart_;
    /**
     * <code>.GameSystemTest.HeartMsg testHeart = 24;</code>
     * @return Whether the testHeart field is set.
     */
    @java.lang.Override
    public boolean hasTestHeart() {
      return testHeart_ != null;
    }
    /**
     * <code>.GameSystemTest.HeartMsg testHeart = 24;</code>
     * @return The testHeart.
     */
    @java.lang.Override
    public GameSystemTest.Test2.HeartMsg getTestHeart() {
      return testHeart_ == null ? GameSystemTest.Test2.HeartMsg.getDefaultInstance() : testHeart_;
    }
    /**
     * <code>.GameSystemTest.HeartMsg testHeart = 24;</code>
     */
    @java.lang.Override
    public GameSystemTest.Test2.HeartMsgOrBuilder getTestHeartOrBuilder() {
      return getTestHeart();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (java.lang.Float.floatToRawIntBits(testF_) != 0) {
        output.writeFloat(1, testF_);
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeDouble(2, testD_);
      }
      if (testInt32_ != 0) {
        output.writeInt32(3, testInt32_);
      }
      if (testInt64_ != 0L) {
        output.writeInt64(4, testInt64_);
      }
      if (testSInt32_ != 0) {
        output.writeSInt32(5, testSInt32_);
      }
      if (testSInt64_ != 0L) {
        output.writeSInt64(6, testSInt64_);
      }
      if (testUInt_ != 0) {
        output.writeUInt32(7, testUInt_);
      }
      if (testULong_ != 0L) {
        output.writeUInt64(8, testULong_);
      }
      if (testFixed32_ != 0) {
        output.writeFixed32(9, testFixed32_);
      }
      if (testFixed64_ != 0L) {
        output.writeFixed64(10, testFixed64_);
      }
      if (testSFixed32_ != 0) {
        output.writeSFixed32(11, testSFixed32_);
      }
      if (testSFixed64_ != 0L) {
        output.writeSFixed64(12, testSFixed64_);
      }
      if (testBool_ != false) {
        output.writeBool(13, testBool_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(testStr_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 14, testStr_);
      }
      if (!testBytes_.isEmpty()) {
        output.writeBytes(15, testBytes_);
      }
      if (getListIntList().size() > 0) {
        output.writeUInt32NoTag(130);
        output.writeUInt32NoTag(listIntMemoizedSerializedSize);
      }
      for (int i = 0; i < listInt_.size(); i++) {
        output.writeInt32NoTag(listInt_.getInt(i));
      }
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetTestMap(),
          TestMapDefaultEntryHolder.defaultEntry,
          17);
      if (testEnum_ != GamePlayerTest.Protocol.TestEnum.NORMAL.getNumber()) {
        output.writeEnum(18, testEnum_);
      }
      if (testMsg2_ != null) {
        output.writeMessage(19, getTestMsg2());
      }
      if (testMsg3_ != null) {
        output.writeMessage(20, getTestMsg3());
      }
      if (testEnum2_ != GamePlayerTest.Protocol.TestMsg.TestEnum2.NORMAL.getNumber()) {
        output.writeEnum(21, testEnum2_);
      }
      if (testBool2123123_ != false) {
        output.writeBool(23, testBool2123123_);
      }
      if (testHeart_ != null) {
        output.writeMessage(24, getTestHeart());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (java.lang.Float.floatToRawIntBits(testF_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(1, testF_);
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(2, testD_);
      }
      if (testInt32_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, testInt32_);
      }
      if (testInt64_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(4, testInt64_);
      }
      if (testSInt32_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(5, testSInt32_);
      }
      if (testSInt64_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt64Size(6, testSInt64_);
      }
      if (testUInt_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(7, testUInt_);
      }
      if (testULong_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(8, testULong_);
      }
      if (testFixed32_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(9, testFixed32_);
      }
      if (testFixed64_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(10, testFixed64_);
      }
      if (testSFixed32_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeSFixed32Size(11, testSFixed32_);
      }
      if (testSFixed64_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeSFixed64Size(12, testSFixed64_);
      }
      if (testBool_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(13, testBool_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(testStr_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(14, testStr_);
      }
      if (!testBytes_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(15, testBytes_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < listInt_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(listInt_.getInt(i));
        }
        size += dataSize;
        if (!getListIntList().isEmpty()) {
          size += 2;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        listIntMemoizedSerializedSize = dataSize;
      }
      for (java.util.Map.Entry<java.lang.Integer, java.lang.String> entry
           : internalGetTestMap().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Integer, java.lang.String>
        testMap__ = TestMapDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(17, testMap__);
      }
      if (testEnum_ != GamePlayerTest.Protocol.TestEnum.NORMAL.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(18, testEnum_);
      }
      if (testMsg2_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(19, getTestMsg2());
      }
      if (testMsg3_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(20, getTestMsg3());
      }
      if (testEnum2_ != GamePlayerTest.Protocol.TestMsg.TestEnum2.NORMAL.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(21, testEnum2_);
      }
      if (testBool2123123_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(23, testBool2123123_);
      }
      if (testHeart_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(24, getTestHeart());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof GamePlayerTest.Protocol.TestMsg)) {
        return super.equals(obj);
      }
      GamePlayerTest.Protocol.TestMsg other = (GamePlayerTest.Protocol.TestMsg) obj;

      if (java.lang.Float.floatToIntBits(getTestF())
          != java.lang.Float.floatToIntBits(
              other.getTestF())) return false;
      if (hasTestD() != other.hasTestD()) return false;
      if (hasTestD()) {
        if (java.lang.Double.doubleToLongBits(getTestD())
            != java.lang.Double.doubleToLongBits(
                other.getTestD())) return false;
      }
      if (getTestInt32()
          != other.getTestInt32()) return false;
      if (getTestInt64()
          != other.getTestInt64()) return false;
      if (getTestSInt32()
          != other.getTestSInt32()) return false;
      if (getTestSInt64()
          != other.getTestSInt64()) return false;
      if (getTestUInt()
          != other.getTestUInt()) return false;
      if (getTestULong()
          != other.getTestULong()) return false;
      if (getTestFixed32()
          != other.getTestFixed32()) return false;
      if (getTestFixed64()
          != other.getTestFixed64()) return false;
      if (getTestSFixed32()
          != other.getTestSFixed32()) return false;
      if (getTestSFixed64()
          != other.getTestSFixed64()) return false;
      if (getTestBool()
          != other.getTestBool()) return false;
      if (!getTestStr()
          .equals(other.getTestStr())) return false;
      if (!getTestBytes()
          .equals(other.getTestBytes())) return false;
      if (!getListIntList()
          .equals(other.getListIntList())) return false;
      if (!internalGetTestMap().equals(
          other.internalGetTestMap())) return false;
      if (testEnum_ != other.testEnum_) return false;
      if (hasTestMsg2() != other.hasTestMsg2()) return false;
      if (hasTestMsg2()) {
        if (!getTestMsg2()
            .equals(other.getTestMsg2())) return false;
      }
      if (hasTestMsg3() != other.hasTestMsg3()) return false;
      if (hasTestMsg3()) {
        if (!getTestMsg3()
            .equals(other.getTestMsg3())) return false;
      }
      if (testEnum2_ != other.testEnum2_) return false;
      if (getTestBool2123123()
          != other.getTestBool2123123()) return false;
      if (hasTestHeart() != other.hasTestHeart()) return false;
      if (hasTestHeart()) {
        if (!getTestHeart()
            .equals(other.getTestHeart())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TESTF_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getTestF());
      if (hasTestD()) {
        hash = (37 * hash) + TESTD_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getTestD()));
      }
      hash = (37 * hash) + TESTINT32_FIELD_NUMBER;
      hash = (53 * hash) + getTestInt32();
      hash = (37 * hash) + TESTINT64_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getTestInt64());
      hash = (37 * hash) + TESTSINT32_FIELD_NUMBER;
      hash = (53 * hash) + getTestSInt32();
      hash = (37 * hash) + TESTSINT64_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getTestSInt64());
      hash = (37 * hash) + TESTUINT_FIELD_NUMBER;
      hash = (53 * hash) + getTestUInt();
      hash = (37 * hash) + TESTULONG_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getTestULong());
      hash = (37 * hash) + TESTFIXED32_FIELD_NUMBER;
      hash = (53 * hash) + getTestFixed32();
      hash = (37 * hash) + TESTFIXED64_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getTestFixed64());
      hash = (37 * hash) + TESTSFIXED32_FIELD_NUMBER;
      hash = (53 * hash) + getTestSFixed32();
      hash = (37 * hash) + TESTSFIXED64_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getTestSFixed64());
      hash = (37 * hash) + TESTBOOL_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getTestBool());
      hash = (37 * hash) + TESTSTR_FIELD_NUMBER;
      hash = (53 * hash) + getTestStr().hashCode();
      hash = (37 * hash) + TESTBYTES_FIELD_NUMBER;
      hash = (53 * hash) + getTestBytes().hashCode();
      if (getListIntCount() > 0) {
        hash = (37 * hash) + LISTINT_FIELD_NUMBER;
        hash = (53 * hash) + getListIntList().hashCode();
      }
      if (!internalGetTestMap().getMap().isEmpty()) {
        hash = (37 * hash) + TESTMAP_FIELD_NUMBER;
        hash = (53 * hash) + internalGetTestMap().hashCode();
      }
      hash = (37 * hash) + TESTENUM_FIELD_NUMBER;
      hash = (53 * hash) + testEnum_;
      if (hasTestMsg2()) {
        hash = (37 * hash) + TESTMSG2_FIELD_NUMBER;
        hash = (53 * hash) + getTestMsg2().hashCode();
      }
      if (hasTestMsg3()) {
        hash = (37 * hash) + TESTMSG3_FIELD_NUMBER;
        hash = (53 * hash) + getTestMsg3().hashCode();
      }
      hash = (37 * hash) + TESTENUM2_FIELD_NUMBER;
      hash = (53 * hash) + testEnum2_;
      hash = (37 * hash) + TESTBOOL2123123_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getTestBool2123123());
      if (hasTestHeart()) {
        hash = (37 * hash) + TESTHEART_FIELD_NUMBER;
        hash = (53 * hash) + getTestHeart().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static GamePlayerTest.Protocol.TestMsg parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static GamePlayerTest.Protocol.TestMsg parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static GamePlayerTest.Protocol.TestMsg parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static GamePlayerTest.Protocol.TestMsg parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static GamePlayerTest.Protocol.TestMsg parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static GamePlayerTest.Protocol.TestMsg parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static GamePlayerTest.Protocol.TestMsg parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static GamePlayerTest.Protocol.TestMsg parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static GamePlayerTest.Protocol.TestMsg parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static GamePlayerTest.Protocol.TestMsg parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static GamePlayerTest.Protocol.TestMsg parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static GamePlayerTest.Protocol.TestMsg parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(GamePlayerTest.Protocol.TestMsg prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *规则四：消息类
     * </pre>
     *
     * Protobuf type {@code GamePlayerTest.TestMsg}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:GamePlayerTest.TestMsg)
        GamePlayerTest.Protocol.TestMsgOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return GamePlayerTest.Protocol.internal_static_GamePlayerTest_TestMsg_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 17:
            return internalGetTestMap();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMutableMapField(
          int number) {
        switch (number) {
          case 17:
            return internalGetMutableTestMap();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return GamePlayerTest.Protocol.internal_static_GamePlayerTest_TestMsg_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                GamePlayerTest.Protocol.TestMsg.class, GamePlayerTest.Protocol.TestMsg.Builder.class);
      }

      // Construct using GamePlayerTest.Protocol.TestMsg.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        testF_ = 0F;

        testD_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000001);
        testInt32_ = 0;

        testInt64_ = 0L;

        testSInt32_ = 0;

        testSInt64_ = 0L;

        testUInt_ = 0;

        testULong_ = 0L;

        testFixed32_ = 0;

        testFixed64_ = 0L;

        testSFixed32_ = 0;

        testSFixed64_ = 0L;

        testBool_ = false;

        testStr_ = "";

        testBytes_ = com.google.protobuf.ByteString.EMPTY;

        listInt_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000002);
        internalGetMutableTestMap().clear();
        testEnum_ = 0;

        if (testMsg2Builder_ == null) {
          testMsg2_ = null;
        } else {
          testMsg2_ = null;
          testMsg2Builder_ = null;
        }
        if (testMsg3Builder_ == null) {
          testMsg3_ = null;
        } else {
          testMsg3_ = null;
          testMsg3Builder_ = null;
        }
        testEnum2_ = 0;

        testBool2123123_ = false;

        if (testHeartBuilder_ == null) {
          testHeart_ = null;
        } else {
          testHeart_ = null;
          testHeartBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return GamePlayerTest.Protocol.internal_static_GamePlayerTest_TestMsg_descriptor;
      }

      @java.lang.Override
      public GamePlayerTest.Protocol.TestMsg getDefaultInstanceForType() {
        return GamePlayerTest.Protocol.TestMsg.getDefaultInstance();
      }

      @java.lang.Override
      public GamePlayerTest.Protocol.TestMsg build() {
        GamePlayerTest.Protocol.TestMsg result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public GamePlayerTest.Protocol.TestMsg buildPartial() {
        GamePlayerTest.Protocol.TestMsg result = new GamePlayerTest.Protocol.TestMsg(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.testF_ = testF_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.testD_ = testD_;
          to_bitField0_ |= 0x00000001;
        }
        result.testInt32_ = testInt32_;
        result.testInt64_ = testInt64_;
        result.testSInt32_ = testSInt32_;
        result.testSInt64_ = testSInt64_;
        result.testUInt_ = testUInt_;
        result.testULong_ = testULong_;
        result.testFixed32_ = testFixed32_;
        result.testFixed64_ = testFixed64_;
        result.testSFixed32_ = testSFixed32_;
        result.testSFixed64_ = testSFixed64_;
        result.testBool_ = testBool_;
        result.testStr_ = testStr_;
        result.testBytes_ = testBytes_;
        if (((bitField0_ & 0x00000002) != 0)) {
          listInt_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.listInt_ = listInt_;
        result.testMap_ = internalGetTestMap();
        result.testMap_.makeImmutable();
        result.testEnum_ = testEnum_;
        if (testMsg2Builder_ == null) {
          result.testMsg2_ = testMsg2_;
        } else {
          result.testMsg2_ = testMsg2Builder_.build();
        }
        if (testMsg3Builder_ == null) {
          result.testMsg3_ = testMsg3_;
        } else {
          result.testMsg3_ = testMsg3Builder_.build();
        }
        result.testEnum2_ = testEnum2_;
        result.testBool2123123_ = testBool2123123_;
        if (testHeartBuilder_ == null) {
          result.testHeart_ = testHeart_;
        } else {
          result.testHeart_ = testHeartBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof GamePlayerTest.Protocol.TestMsg) {
          return mergeFrom((GamePlayerTest.Protocol.TestMsg)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(GamePlayerTest.Protocol.TestMsg other) {
        if (other == GamePlayerTest.Protocol.TestMsg.getDefaultInstance()) return this;
        if (other.getTestF() != 0F) {
          setTestF(other.getTestF());
        }
        if (other.hasTestD()) {
          setTestD(other.getTestD());
        }
        if (other.getTestInt32() != 0) {
          setTestInt32(other.getTestInt32());
        }
        if (other.getTestInt64() != 0L) {
          setTestInt64(other.getTestInt64());
        }
        if (other.getTestSInt32() != 0) {
          setTestSInt32(other.getTestSInt32());
        }
        if (other.getTestSInt64() != 0L) {
          setTestSInt64(other.getTestSInt64());
        }
        if (other.getTestUInt() != 0) {
          setTestUInt(other.getTestUInt());
        }
        if (other.getTestULong() != 0L) {
          setTestULong(other.getTestULong());
        }
        if (other.getTestFixed32() != 0) {
          setTestFixed32(other.getTestFixed32());
        }
        if (other.getTestFixed64() != 0L) {
          setTestFixed64(other.getTestFixed64());
        }
        if (other.getTestSFixed32() != 0) {
          setTestSFixed32(other.getTestSFixed32());
        }
        if (other.getTestSFixed64() != 0L) {
          setTestSFixed64(other.getTestSFixed64());
        }
        if (other.getTestBool() != false) {
          setTestBool(other.getTestBool());
        }
        if (!other.getTestStr().isEmpty()) {
          testStr_ = other.testStr_;
          onChanged();
        }
        if (other.getTestBytes() != com.google.protobuf.ByteString.EMPTY) {
          setTestBytes(other.getTestBytes());
        }
        if (!other.listInt_.isEmpty()) {
          if (listInt_.isEmpty()) {
            listInt_ = other.listInt_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureListIntIsMutable();
            listInt_.addAll(other.listInt_);
          }
          onChanged();
        }
        internalGetMutableTestMap().mergeFrom(
            other.internalGetTestMap());
        if (other.testEnum_ != 0) {
          setTestEnumValue(other.getTestEnumValue());
        }
        if (other.hasTestMsg2()) {
          mergeTestMsg2(other.getTestMsg2());
        }
        if (other.hasTestMsg3()) {
          mergeTestMsg3(other.getTestMsg3());
        }
        if (other.testEnum2_ != 0) {
          setTestEnum2Value(other.getTestEnum2Value());
        }
        if (other.getTestBool2123123() != false) {
          setTestBool2123123(other.getTestBool2123123());
        }
        if (other.hasTestHeart()) {
          mergeTestHeart(other.getTestHeart());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        GamePlayerTest.Protocol.TestMsg parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (GamePlayerTest.Protocol.TestMsg) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private float testF_ ;
      /**
       * <pre>
       *规则五：成员类型 和 唯一编号
       *浮点数
       * = 1 不代表默认值 而是代表唯一编号 方便我们进行序列化和反序列化的处理
       *required 必须赋值的字段 proto2
       * </pre>
       *
       * <code>float testF = 1;</code>
       * @return The testF.
       */
      @java.lang.Override
      public float getTestF() {
        return testF_;
      }
      /**
       * <pre>
       *规则五：成员类型 和 唯一编号
       *浮点数
       * = 1 不代表默认值 而是代表唯一编号 方便我们进行序列化和反序列化的处理
       *required 必须赋值的字段 proto2
       * </pre>
       *
       * <code>float testF = 1;</code>
       * @param value The testF to set.
       * @return This builder for chaining.
       */
      public Builder setTestF(float value) {
        
        testF_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *规则五：成员类型 和 唯一编号
       *浮点数
       * = 1 不代表默认值 而是代表唯一编号 方便我们进行序列化和反序列化的处理
       *required 必须赋值的字段 proto2
       * </pre>
       *
       * <code>float testF = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearTestF() {
        
        testF_ = 0F;
        onChanged();
        return this;
      }

      private double testD_ ;
      /**
       * <pre>
       *optional 可以不赋值的字段
       * </pre>
       *
       * <code>optional double testD = 2;</code>
       * @return Whether the testD field is set.
       */
      @java.lang.Override
      public boolean hasTestD() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       *optional 可以不赋值的字段
       * </pre>
       *
       * <code>optional double testD = 2;</code>
       * @return The testD.
       */
      @java.lang.Override
      public double getTestD() {
        return testD_;
      }
      /**
       * <pre>
       *optional 可以不赋值的字段
       * </pre>
       *
       * <code>optional double testD = 2;</code>
       * @param value The testD to set.
       * @return This builder for chaining.
       */
      public Builder setTestD(double value) {
        bitField0_ |= 0x00000001;
        testD_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *optional 可以不赋值的字段
       * </pre>
       *
       * <code>optional double testD = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearTestD() {
        bitField0_ = (bitField0_ & ~0x00000001);
        testD_ = 0D;
        onChanged();
        return this;
      }

      private int testInt32_ ;
      /**
       * <pre>
       *变长编码
       *所谓变长 就是会根据 数字的大小 来使用对应的字节数来存储  1 2 4 
       *Protobuf帮助我们优化的部分 可以尽量少的使用字节数 来存储内容
       * </pre>
       *
       * <code>int32 testInt32 = 3;</code>
       * @return The testInt32.
       */
      @java.lang.Override
      public int getTestInt32() {
        return testInt32_;
      }
      /**
       * <pre>
       *变长编码
       *所谓变长 就是会根据 数字的大小 来使用对应的字节数来存储  1 2 4 
       *Protobuf帮助我们优化的部分 可以尽量少的使用字节数 来存储内容
       * </pre>
       *
       * <code>int32 testInt32 = 3;</code>
       * @param value The testInt32 to set.
       * @return This builder for chaining.
       */
      public Builder setTestInt32(int value) {
        
        testInt32_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *变长编码
       *所谓变长 就是会根据 数字的大小 来使用对应的字节数来存储  1 2 4 
       *Protobuf帮助我们优化的部分 可以尽量少的使用字节数 来存储内容
       * </pre>
       *
       * <code>int32 testInt32 = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearTestInt32() {
        
        testInt32_ = 0;
        onChanged();
        return this;
      }

      private long testInt64_ ;
      /**
       * <pre>
       *1 2 4 8
       * </pre>
       *
       * <code>int64 testInt64 = 4;</code>
       * @return The testInt64.
       */
      @java.lang.Override
      public long getTestInt64() {
        return testInt64_;
      }
      /**
       * <pre>
       *1 2 4 8
       * </pre>
       *
       * <code>int64 testInt64 = 4;</code>
       * @param value The testInt64 to set.
       * @return This builder for chaining.
       */
      public Builder setTestInt64(long value) {
        
        testInt64_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *1 2 4 8
       * </pre>
       *
       * <code>int64 testInt64 = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearTestInt64() {
        
        testInt64_ = 0L;
        onChanged();
        return this;
      }

      private int testSInt32_ ;
      /**
       * <pre>
       *更实用与表示负数类型的整数
       * </pre>
       *
       * <code>sint32 testSInt32 = 5;</code>
       * @return The testSInt32.
       */
      @java.lang.Override
      public int getTestSInt32() {
        return testSInt32_;
      }
      /**
       * <pre>
       *更实用与表示负数类型的整数
       * </pre>
       *
       * <code>sint32 testSInt32 = 5;</code>
       * @param value The testSInt32 to set.
       * @return This builder for chaining.
       */
      public Builder setTestSInt32(int value) {
        
        testSInt32_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *更实用与表示负数类型的整数
       * </pre>
       *
       * <code>sint32 testSInt32 = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearTestSInt32() {
        
        testSInt32_ = 0;
        onChanged();
        return this;
      }

      private long testSInt64_ ;
      /**
       * <pre>
       *C# - long 适用于来表示负数的整数
       * </pre>
       *
       * <code>sint64 testSInt64 = 6;</code>
       * @return The testSInt64.
       */
      @java.lang.Override
      public long getTestSInt64() {
        return testSInt64_;
      }
      /**
       * <pre>
       *C# - long 适用于来表示负数的整数
       * </pre>
       *
       * <code>sint64 testSInt64 = 6;</code>
       * @param value The testSInt64 to set.
       * @return This builder for chaining.
       */
      public Builder setTestSInt64(long value) {
        
        testSInt64_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *C# - long 适用于来表示负数的整数
       * </pre>
       *
       * <code>sint64 testSInt64 = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearTestSInt64() {
        
        testSInt64_ = 0L;
        onChanged();
        return this;
      }

      private int testUInt_ ;
      /**
       * <pre>
       *无符号 变长编码
       *1 2 4
       * </pre>
       *
       * <code>uint32 testUInt = 7;</code>
       * @return The testUInt.
       */
      @java.lang.Override
      public int getTestUInt() {
        return testUInt_;
      }
      /**
       * <pre>
       *无符号 变长编码
       *1 2 4
       * </pre>
       *
       * <code>uint32 testUInt = 7;</code>
       * @param value The testUInt to set.
       * @return This builder for chaining.
       */
      public Builder setTestUInt(int value) {
        
        testUInt_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *无符号 变长编码
       *1 2 4
       * </pre>
       *
       * <code>uint32 testUInt = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearTestUInt() {
        
        testUInt_ = 0;
        onChanged();
        return this;
      }

      private long testULong_ ;
      /**
       * <pre>
       *C# - ulong 变长的编码
       * </pre>
       *
       * <code>uint64 testULong = 8;</code>
       * @return The testULong.
       */
      @java.lang.Override
      public long getTestULong() {
        return testULong_;
      }
      /**
       * <pre>
       *C# - ulong 变长的编码
       * </pre>
       *
       * <code>uint64 testULong = 8;</code>
       * @param value The testULong to set.
       * @return This builder for chaining.
       */
      public Builder setTestULong(long value) {
        
        testULong_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *C# - ulong 变长的编码
       * </pre>
       *
       * <code>uint64 testULong = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearTestULong() {
        
        testULong_ = 0L;
        onChanged();
        return this;
      }

      private int testFixed32_ ;
      /**
       * <pre>
       *固定字节数的类型
       * </pre>
       *
       * <code>fixed32 testFixed32 = 9;</code>
       * @return The testFixed32.
       */
      @java.lang.Override
      public int getTestFixed32() {
        return testFixed32_;
      }
      /**
       * <pre>
       *固定字节数的类型
       * </pre>
       *
       * <code>fixed32 testFixed32 = 9;</code>
       * @param value The testFixed32 to set.
       * @return This builder for chaining.
       */
      public Builder setTestFixed32(int value) {
        
        testFixed32_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *固定字节数的类型
       * </pre>
       *
       * <code>fixed32 testFixed32 = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearTestFixed32() {
        
        testFixed32_ = 0;
        onChanged();
        return this;
      }

      private long testFixed64_ ;
      /**
       * <pre>
       *C# -ulong 它通常用来表示大于2的56次方的数 ，比uint64更有效 始终是8个字节
       * </pre>
       *
       * <code>fixed64 testFixed64 = 10;</code>
       * @return The testFixed64.
       */
      @java.lang.Override
      public long getTestFixed64() {
        return testFixed64_;
      }
      /**
       * <pre>
       *C# -ulong 它通常用来表示大于2的56次方的数 ，比uint64更有效 始终是8个字节
       * </pre>
       *
       * <code>fixed64 testFixed64 = 10;</code>
       * @param value The testFixed64 to set.
       * @return This builder for chaining.
       */
      public Builder setTestFixed64(long value) {
        
        testFixed64_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *C# -ulong 它通常用来表示大于2的56次方的数 ，比uint64更有效 始终是8个字节
       * </pre>
       *
       * <code>fixed64 testFixed64 = 10;</code>
       * @return This builder for chaining.
       */
      public Builder clearTestFixed64() {
        
        testFixed64_ = 0L;
        onChanged();
        return this;
      }

      private int testSFixed32_ ;
      /**
       * <pre>
       *C# - int 始终4个字节
       * </pre>
       *
       * <code>sfixed32 testSFixed32 = 11;</code>
       * @return The testSFixed32.
       */
      @java.lang.Override
      public int getTestSFixed32() {
        return testSFixed32_;
      }
      /**
       * <pre>
       *C# - int 始终4个字节
       * </pre>
       *
       * <code>sfixed32 testSFixed32 = 11;</code>
       * @param value The testSFixed32 to set.
       * @return This builder for chaining.
       */
      public Builder setTestSFixed32(int value) {
        
        testSFixed32_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *C# - int 始终4个字节
       * </pre>
       *
       * <code>sfixed32 testSFixed32 = 11;</code>
       * @return This builder for chaining.
       */
      public Builder clearTestSFixed32() {
        
        testSFixed32_ = 0;
        onChanged();
        return this;
      }

      private long testSFixed64_ ;
      /**
       * <pre>
       *C# - long 始终8个字节
       * </pre>
       *
       * <code>sfixed64 testSFixed64 = 12;</code>
       * @return The testSFixed64.
       */
      @java.lang.Override
      public long getTestSFixed64() {
        return testSFixed64_;
      }
      /**
       * <pre>
       *C# - long 始终8个字节
       * </pre>
       *
       * <code>sfixed64 testSFixed64 = 12;</code>
       * @param value The testSFixed64 to set.
       * @return This builder for chaining.
       */
      public Builder setTestSFixed64(long value) {
        
        testSFixed64_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *C# - long 始终8个字节
       * </pre>
       *
       * <code>sfixed64 testSFixed64 = 12;</code>
       * @return This builder for chaining.
       */
      public Builder clearTestSFixed64() {
        
        testSFixed64_ = 0L;
        onChanged();
        return this;
      }

      private boolean testBool_ ;
      /**
       * <pre>
       *其它类型
       * </pre>
       *
       * <code>bool testBool = 13;</code>
       * @return The testBool.
       */
      @java.lang.Override
      public boolean getTestBool() {
        return testBool_;
      }
      /**
       * <pre>
       *其它类型
       * </pre>
       *
       * <code>bool testBool = 13;</code>
       * @param value The testBool to set.
       * @return This builder for chaining.
       */
      public Builder setTestBool(boolean value) {
        
        testBool_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *其它类型
       * </pre>
       *
       * <code>bool testBool = 13;</code>
       * @return This builder for chaining.
       */
      public Builder clearTestBool() {
        
        testBool_ = false;
        onChanged();
        return this;
      }

      private java.lang.Object testStr_ = "";
      /**
       * <pre>
       *C# - string
       * </pre>
       *
       * <code>string testStr = 14;</code>
       * @return The testStr.
       */
      public java.lang.String getTestStr() {
        java.lang.Object ref = testStr_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          testStr_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *C# - string
       * </pre>
       *
       * <code>string testStr = 14;</code>
       * @return The bytes for testStr.
       */
      public com.google.protobuf.ByteString
          getTestStrBytes() {
        java.lang.Object ref = testStr_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          testStr_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *C# - string
       * </pre>
       *
       * <code>string testStr = 14;</code>
       * @param value The testStr to set.
       * @return This builder for chaining.
       */
      public Builder setTestStr(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        testStr_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *C# - string
       * </pre>
       *
       * <code>string testStr = 14;</code>
       * @return This builder for chaining.
       */
      public Builder clearTestStr() {
        
        testStr_ = getDefaultInstance().getTestStr();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *C# - string
       * </pre>
       *
       * <code>string testStr = 14;</code>
       * @param value The bytes for testStr to set.
       * @return This builder for chaining.
       */
      public Builder setTestStrBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        testStr_ = value;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString testBytes_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       *C# - BytesString 字节字符串
       * </pre>
       *
       * <code>bytes testBytes = 15;</code>
       * @return The testBytes.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getTestBytes() {
        return testBytes_;
      }
      /**
       * <pre>
       *C# - BytesString 字节字符串
       * </pre>
       *
       * <code>bytes testBytes = 15;</code>
       * @param value The testBytes to set.
       * @return This builder for chaining.
       */
      public Builder setTestBytes(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        testBytes_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *C# - BytesString 字节字符串
       * </pre>
       *
       * <code>bytes testBytes = 15;</code>
       * @return This builder for chaining.
       */
      public Builder clearTestBytes() {
        
        testBytes_ = getDefaultInstance().getTestBytes();
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.IntList listInt_ = emptyIntList();
      private void ensureListIntIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          listInt_ = mutableCopy(listInt_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <pre>
       *数组List
       * </pre>
       *
       * <code>repeated int32 listInt = 16;</code>
       * @return A list containing the listInt.
       */
      public java.util.List<java.lang.Integer>
          getListIntList() {
        return ((bitField0_ & 0x00000002) != 0) ?
                 java.util.Collections.unmodifiableList(listInt_) : listInt_;
      }
      /**
       * <pre>
       *数组List
       * </pre>
       *
       * <code>repeated int32 listInt = 16;</code>
       * @return The count of listInt.
       */
      public int getListIntCount() {
        return listInt_.size();
      }
      /**
       * <pre>
       *数组List
       * </pre>
       *
       * <code>repeated int32 listInt = 16;</code>
       * @param index The index of the element to return.
       * @return The listInt at the given index.
       */
      public int getListInt(int index) {
        return listInt_.getInt(index);
      }
      /**
       * <pre>
       *数组List
       * </pre>
       *
       * <code>repeated int32 listInt = 16;</code>
       * @param index The index to set the value at.
       * @param value The listInt to set.
       * @return This builder for chaining.
       */
      public Builder setListInt(
          int index, int value) {
        ensureListIntIsMutable();
        listInt_.setInt(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *数组List
       * </pre>
       *
       * <code>repeated int32 listInt = 16;</code>
       * @param value The listInt to add.
       * @return This builder for chaining.
       */
      public Builder addListInt(int value) {
        ensureListIntIsMutable();
        listInt_.addInt(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *数组List
       * </pre>
       *
       * <code>repeated int32 listInt = 16;</code>
       * @param values The listInt to add.
       * @return This builder for chaining.
       */
      public Builder addAllListInt(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureListIntIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, listInt_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *数组List
       * </pre>
       *
       * <code>repeated int32 listInt = 16;</code>
       * @return This builder for chaining.
       */
      public Builder clearListInt() {
        listInt_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.Integer, java.lang.String> testMap_;
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.String>
      internalGetTestMap() {
        if (testMap_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              TestMapDefaultEntryHolder.defaultEntry);
        }
        return testMap_;
      }
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.String>
      internalGetMutableTestMap() {
        onChanged();;
        if (testMap_ == null) {
          testMap_ = com.google.protobuf.MapField.newMapField(
              TestMapDefaultEntryHolder.defaultEntry);
        }
        if (!testMap_.isMutable()) {
          testMap_ = testMap_.copy();
        }
        return testMap_;
      }

      public int getTestMapCount() {
        return internalGetTestMap().getMap().size();
      }
      /**
       * <pre>
       *字典Dictionary
       * </pre>
       *
       * <code>map&lt;int32, string&gt; testMap = 17;</code>
       */

      @java.lang.Override
      public boolean containsTestMap(
          int key) {
        
        return internalGetTestMap().getMap().containsKey(key);
      }
      /**
       * Use {@link #getTestMapMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.String> getTestMap() {
        return getTestMapMap();
      }
      /**
       * <pre>
       *字典Dictionary
       * </pre>
       *
       * <code>map&lt;int32, string&gt; testMap = 17;</code>
       */
      @java.lang.Override

      public java.util.Map<java.lang.Integer, java.lang.String> getTestMapMap() {
        return internalGetTestMap().getMap();
      }
      /**
       * <pre>
       *字典Dictionary
       * </pre>
       *
       * <code>map&lt;int32, string&gt; testMap = 17;</code>
       */
      @java.lang.Override

      public java.lang.String getTestMapOrDefault(
          int key,
          java.lang.String defaultValue) {
        
        java.util.Map<java.lang.Integer, java.lang.String> map =
            internalGetTestMap().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       *字典Dictionary
       * </pre>
       *
       * <code>map&lt;int32, string&gt; testMap = 17;</code>
       */
      @java.lang.Override

      public java.lang.String getTestMapOrThrow(
          int key) {
        
        java.util.Map<java.lang.Integer, java.lang.String> map =
            internalGetTestMap().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearTestMap() {
        internalGetMutableTestMap().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <pre>
       *字典Dictionary
       * </pre>
       *
       * <code>map&lt;int32, string&gt; testMap = 17;</code>
       */

      public Builder removeTestMap(
          int key) {
        
        internalGetMutableTestMap().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.String>
      getMutableTestMap() {
        return internalGetMutableTestMap().getMutableMap();
      }
      /**
       * <pre>
       *字典Dictionary
       * </pre>
       *
       * <code>map&lt;int32, string&gt; testMap = 17;</code>
       */
      public Builder putTestMap(
          int key,
          java.lang.String value) {
        
        if (value == null) {
  throw new NullPointerException("map value");
}

        internalGetMutableTestMap().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <pre>
       *字典Dictionary
       * </pre>
       *
       * <code>map&lt;int32, string&gt; testMap = 17;</code>
       */

      public Builder putAllTestMap(
          java.util.Map<java.lang.Integer, java.lang.String> values) {
        internalGetMutableTestMap().getMutableMap()
            .putAll(values);
        return this;
      }

      private int testEnum_ = 0;
      /**
       * <pre>
       *枚举成员变量的声明 需要唯一编码
       * </pre>
       *
       * <code>.GamePlayerTest.TestEnum testEnum = 18;</code>
       * @return The enum numeric value on the wire for testEnum.
       */
      @java.lang.Override public int getTestEnumValue() {
        return testEnum_;
      }
      /**
       * <pre>
       *枚举成员变量的声明 需要唯一编码
       * </pre>
       *
       * <code>.GamePlayerTest.TestEnum testEnum = 18;</code>
       * @param value The enum numeric value on the wire for testEnum to set.
       * @return This builder for chaining.
       */
      public Builder setTestEnumValue(int value) {
        
        testEnum_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *枚举成员变量的声明 需要唯一编码
       * </pre>
       *
       * <code>.GamePlayerTest.TestEnum testEnum = 18;</code>
       * @return The testEnum.
       */
      @java.lang.Override
      public GamePlayerTest.Protocol.TestEnum getTestEnum() {
        @SuppressWarnings("deprecation")
        GamePlayerTest.Protocol.TestEnum result = GamePlayerTest.Protocol.TestEnum.valueOf(testEnum_);
        return result == null ? GamePlayerTest.Protocol.TestEnum.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       *枚举成员变量的声明 需要唯一编码
       * </pre>
       *
       * <code>.GamePlayerTest.TestEnum testEnum = 18;</code>
       * @param value The testEnum to set.
       * @return This builder for chaining.
       */
      public Builder setTestEnum(GamePlayerTest.Protocol.TestEnum value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        testEnum_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *枚举成员变量的声明 需要唯一编码
       * </pre>
       *
       * <code>.GamePlayerTest.TestEnum testEnum = 18;</code>
       * @return This builder for chaining.
       */
      public Builder clearTestEnum() {
        
        testEnum_ = 0;
        onChanged();
        return this;
      }

      private GamePlayerTest.Protocol.TestMsg2 testMsg2_;
      private com.google.protobuf.SingleFieldBuilderV3<
          GamePlayerTest.Protocol.TestMsg2, GamePlayerTest.Protocol.TestMsg2.Builder, GamePlayerTest.Protocol.TestMsg2OrBuilder> testMsg2Builder_;
      /**
       * <pre>
       *声明自定义类对象 需要唯一编码
       *默认值是null
       * </pre>
       *
       * <code>.GamePlayerTest.TestMsg2 testMsg2 = 19;</code>
       * @return Whether the testMsg2 field is set.
       */
      public boolean hasTestMsg2() {
        return testMsg2Builder_ != null || testMsg2_ != null;
      }
      /**
       * <pre>
       *声明自定义类对象 需要唯一编码
       *默认值是null
       * </pre>
       *
       * <code>.GamePlayerTest.TestMsg2 testMsg2 = 19;</code>
       * @return The testMsg2.
       */
      public GamePlayerTest.Protocol.TestMsg2 getTestMsg2() {
        if (testMsg2Builder_ == null) {
          return testMsg2_ == null ? GamePlayerTest.Protocol.TestMsg2.getDefaultInstance() : testMsg2_;
        } else {
          return testMsg2Builder_.getMessage();
        }
      }
      /**
       * <pre>
       *声明自定义类对象 需要唯一编码
       *默认值是null
       * </pre>
       *
       * <code>.GamePlayerTest.TestMsg2 testMsg2 = 19;</code>
       */
      public Builder setTestMsg2(GamePlayerTest.Protocol.TestMsg2 value) {
        if (testMsg2Builder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          testMsg2_ = value;
          onChanged();
        } else {
          testMsg2Builder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       *声明自定义类对象 需要唯一编码
       *默认值是null
       * </pre>
       *
       * <code>.GamePlayerTest.TestMsg2 testMsg2 = 19;</code>
       */
      public Builder setTestMsg2(
          GamePlayerTest.Protocol.TestMsg2.Builder builderForValue) {
        if (testMsg2Builder_ == null) {
          testMsg2_ = builderForValue.build();
          onChanged();
        } else {
          testMsg2Builder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       *声明自定义类对象 需要唯一编码
       *默认值是null
       * </pre>
       *
       * <code>.GamePlayerTest.TestMsg2 testMsg2 = 19;</code>
       */
      public Builder mergeTestMsg2(GamePlayerTest.Protocol.TestMsg2 value) {
        if (testMsg2Builder_ == null) {
          if (testMsg2_ != null) {
            testMsg2_ =
              GamePlayerTest.Protocol.TestMsg2.newBuilder(testMsg2_).mergeFrom(value).buildPartial();
          } else {
            testMsg2_ = value;
          }
          onChanged();
        } else {
          testMsg2Builder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       *声明自定义类对象 需要唯一编码
       *默认值是null
       * </pre>
       *
       * <code>.GamePlayerTest.TestMsg2 testMsg2 = 19;</code>
       */
      public Builder clearTestMsg2() {
        if (testMsg2Builder_ == null) {
          testMsg2_ = null;
          onChanged();
        } else {
          testMsg2_ = null;
          testMsg2Builder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       *声明自定义类对象 需要唯一编码
       *默认值是null
       * </pre>
       *
       * <code>.GamePlayerTest.TestMsg2 testMsg2 = 19;</code>
       */
      public GamePlayerTest.Protocol.TestMsg2.Builder getTestMsg2Builder() {
        
        onChanged();
        return getTestMsg2FieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *声明自定义类对象 需要唯一编码
       *默认值是null
       * </pre>
       *
       * <code>.GamePlayerTest.TestMsg2 testMsg2 = 19;</code>
       */
      public GamePlayerTest.Protocol.TestMsg2OrBuilder getTestMsg2OrBuilder() {
        if (testMsg2Builder_ != null) {
          return testMsg2Builder_.getMessageOrBuilder();
        } else {
          return testMsg2_ == null ?
              GamePlayerTest.Protocol.TestMsg2.getDefaultInstance() : testMsg2_;
        }
      }
      /**
       * <pre>
       *声明自定义类对象 需要唯一编码
       *默认值是null
       * </pre>
       *
       * <code>.GamePlayerTest.TestMsg2 testMsg2 = 19;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          GamePlayerTest.Protocol.TestMsg2, GamePlayerTest.Protocol.TestMsg2.Builder, GamePlayerTest.Protocol.TestMsg2OrBuilder> 
          getTestMsg2FieldBuilder() {
        if (testMsg2Builder_ == null) {
          testMsg2Builder_ = new com.google.protobuf.SingleFieldBuilderV3<
              GamePlayerTest.Protocol.TestMsg2, GamePlayerTest.Protocol.TestMsg2.Builder, GamePlayerTest.Protocol.TestMsg2OrBuilder>(
                  getTestMsg2(),
                  getParentForChildren(),
                  isClean());
          testMsg2_ = null;
        }
        return testMsg2Builder_;
      }

      private GamePlayerTest.Protocol.TestMsg.TestMsg3 testMsg3_;
      private com.google.protobuf.SingleFieldBuilderV3<
          GamePlayerTest.Protocol.TestMsg.TestMsg3, GamePlayerTest.Protocol.TestMsg.TestMsg3.Builder, GamePlayerTest.Protocol.TestMsg.TestMsg3OrBuilder> testMsg3Builder_;
      /**
       * <code>.GamePlayerTest.TestMsg.TestMsg3 testMsg3 = 20;</code>
       * @return Whether the testMsg3 field is set.
       */
      public boolean hasTestMsg3() {
        return testMsg3Builder_ != null || testMsg3_ != null;
      }
      /**
       * <code>.GamePlayerTest.TestMsg.TestMsg3 testMsg3 = 20;</code>
       * @return The testMsg3.
       */
      public GamePlayerTest.Protocol.TestMsg.TestMsg3 getTestMsg3() {
        if (testMsg3Builder_ == null) {
          return testMsg3_ == null ? GamePlayerTest.Protocol.TestMsg.TestMsg3.getDefaultInstance() : testMsg3_;
        } else {
          return testMsg3Builder_.getMessage();
        }
      }
      /**
       * <code>.GamePlayerTest.TestMsg.TestMsg3 testMsg3 = 20;</code>
       */
      public Builder setTestMsg3(GamePlayerTest.Protocol.TestMsg.TestMsg3 value) {
        if (testMsg3Builder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          testMsg3_ = value;
          onChanged();
        } else {
          testMsg3Builder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.GamePlayerTest.TestMsg.TestMsg3 testMsg3 = 20;</code>
       */
      public Builder setTestMsg3(
          GamePlayerTest.Protocol.TestMsg.TestMsg3.Builder builderForValue) {
        if (testMsg3Builder_ == null) {
          testMsg3_ = builderForValue.build();
          onChanged();
        } else {
          testMsg3Builder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.GamePlayerTest.TestMsg.TestMsg3 testMsg3 = 20;</code>
       */
      public Builder mergeTestMsg3(GamePlayerTest.Protocol.TestMsg.TestMsg3 value) {
        if (testMsg3Builder_ == null) {
          if (testMsg3_ != null) {
            testMsg3_ =
              GamePlayerTest.Protocol.TestMsg.TestMsg3.newBuilder(testMsg3_).mergeFrom(value).buildPartial();
          } else {
            testMsg3_ = value;
          }
          onChanged();
        } else {
          testMsg3Builder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.GamePlayerTest.TestMsg.TestMsg3 testMsg3 = 20;</code>
       */
      public Builder clearTestMsg3() {
        if (testMsg3Builder_ == null) {
          testMsg3_ = null;
          onChanged();
        } else {
          testMsg3_ = null;
          testMsg3Builder_ = null;
        }

        return this;
      }
      /**
       * <code>.GamePlayerTest.TestMsg.TestMsg3 testMsg3 = 20;</code>
       */
      public GamePlayerTest.Protocol.TestMsg.TestMsg3.Builder getTestMsg3Builder() {
        
        onChanged();
        return getTestMsg3FieldBuilder().getBuilder();
      }
      /**
       * <code>.GamePlayerTest.TestMsg.TestMsg3 testMsg3 = 20;</code>
       */
      public GamePlayerTest.Protocol.TestMsg.TestMsg3OrBuilder getTestMsg3OrBuilder() {
        if (testMsg3Builder_ != null) {
          return testMsg3Builder_.getMessageOrBuilder();
        } else {
          return testMsg3_ == null ?
              GamePlayerTest.Protocol.TestMsg.TestMsg3.getDefaultInstance() : testMsg3_;
        }
      }
      /**
       * <code>.GamePlayerTest.TestMsg.TestMsg3 testMsg3 = 20;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          GamePlayerTest.Protocol.TestMsg.TestMsg3, GamePlayerTest.Protocol.TestMsg.TestMsg3.Builder, GamePlayerTest.Protocol.TestMsg.TestMsg3OrBuilder> 
          getTestMsg3FieldBuilder() {
        if (testMsg3Builder_ == null) {
          testMsg3Builder_ = new com.google.protobuf.SingleFieldBuilderV3<
              GamePlayerTest.Protocol.TestMsg.TestMsg3, GamePlayerTest.Protocol.TestMsg.TestMsg3.Builder, GamePlayerTest.Protocol.TestMsg.TestMsg3OrBuilder>(
                  getTestMsg3(),
                  getParentForChildren(),
                  isClean());
          testMsg3_ = null;
        }
        return testMsg3Builder_;
      }

      private int testEnum2_ = 0;
      /**
       * <code>.GamePlayerTest.TestMsg.TestEnum2 testEnum2 = 21;</code>
       * @return The enum numeric value on the wire for testEnum2.
       */
      @java.lang.Override public int getTestEnum2Value() {
        return testEnum2_;
      }
      /**
       * <code>.GamePlayerTest.TestMsg.TestEnum2 testEnum2 = 21;</code>
       * @param value The enum numeric value on the wire for testEnum2 to set.
       * @return This builder for chaining.
       */
      public Builder setTestEnum2Value(int value) {
        
        testEnum2_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.GamePlayerTest.TestMsg.TestEnum2 testEnum2 = 21;</code>
       * @return The testEnum2.
       */
      @java.lang.Override
      public GamePlayerTest.Protocol.TestMsg.TestEnum2 getTestEnum2() {
        @SuppressWarnings("deprecation")
        GamePlayerTest.Protocol.TestMsg.TestEnum2 result = GamePlayerTest.Protocol.TestMsg.TestEnum2.valueOf(testEnum2_);
        return result == null ? GamePlayerTest.Protocol.TestMsg.TestEnum2.UNRECOGNIZED : result;
      }
      /**
       * <code>.GamePlayerTest.TestMsg.TestEnum2 testEnum2 = 21;</code>
       * @param value The testEnum2 to set.
       * @return This builder for chaining.
       */
      public Builder setTestEnum2(GamePlayerTest.Protocol.TestMsg.TestEnum2 value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        testEnum2_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.GamePlayerTest.TestMsg.TestEnum2 testEnum2 = 21;</code>
       * @return This builder for chaining.
       */
      public Builder clearTestEnum2() {
        
        testEnum2_ = 0;
        onChanged();
        return this;
      }

      private boolean testBool2123123_ ;
      /**
       * <code>bool testBool2123123 = 23;</code>
       * @return The testBool2123123.
       */
      @java.lang.Override
      public boolean getTestBool2123123() {
        return testBool2123123_;
      }
      /**
       * <code>bool testBool2123123 = 23;</code>
       * @param value The testBool2123123 to set.
       * @return This builder for chaining.
       */
      public Builder setTestBool2123123(boolean value) {
        
        testBool2123123_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool testBool2123123 = 23;</code>
       * @return This builder for chaining.
       */
      public Builder clearTestBool2123123() {
        
        testBool2123123_ = false;
        onChanged();
        return this;
      }

      private GameSystemTest.Test2.HeartMsg testHeart_;
      private com.google.protobuf.SingleFieldBuilderV3<
          GameSystemTest.Test2.HeartMsg, GameSystemTest.Test2.HeartMsg.Builder, GameSystemTest.Test2.HeartMsgOrBuilder> testHeartBuilder_;
      /**
       * <code>.GameSystemTest.HeartMsg testHeart = 24;</code>
       * @return Whether the testHeart field is set.
       */
      public boolean hasTestHeart() {
        return testHeartBuilder_ != null || testHeart_ != null;
      }
      /**
       * <code>.GameSystemTest.HeartMsg testHeart = 24;</code>
       * @return The testHeart.
       */
      public GameSystemTest.Test2.HeartMsg getTestHeart() {
        if (testHeartBuilder_ == null) {
          return testHeart_ == null ? GameSystemTest.Test2.HeartMsg.getDefaultInstance() : testHeart_;
        } else {
          return testHeartBuilder_.getMessage();
        }
      }
      /**
       * <code>.GameSystemTest.HeartMsg testHeart = 24;</code>
       */
      public Builder setTestHeart(GameSystemTest.Test2.HeartMsg value) {
        if (testHeartBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          testHeart_ = value;
          onChanged();
        } else {
          testHeartBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.GameSystemTest.HeartMsg testHeart = 24;</code>
       */
      public Builder setTestHeart(
          GameSystemTest.Test2.HeartMsg.Builder builderForValue) {
        if (testHeartBuilder_ == null) {
          testHeart_ = builderForValue.build();
          onChanged();
        } else {
          testHeartBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.GameSystemTest.HeartMsg testHeart = 24;</code>
       */
      public Builder mergeTestHeart(GameSystemTest.Test2.HeartMsg value) {
        if (testHeartBuilder_ == null) {
          if (testHeart_ != null) {
            testHeart_ =
              GameSystemTest.Test2.HeartMsg.newBuilder(testHeart_).mergeFrom(value).buildPartial();
          } else {
            testHeart_ = value;
          }
          onChanged();
        } else {
          testHeartBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.GameSystemTest.HeartMsg testHeart = 24;</code>
       */
      public Builder clearTestHeart() {
        if (testHeartBuilder_ == null) {
          testHeart_ = null;
          onChanged();
        } else {
          testHeart_ = null;
          testHeartBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.GameSystemTest.HeartMsg testHeart = 24;</code>
       */
      public GameSystemTest.Test2.HeartMsg.Builder getTestHeartBuilder() {
        
        onChanged();
        return getTestHeartFieldBuilder().getBuilder();
      }
      /**
       * <code>.GameSystemTest.HeartMsg testHeart = 24;</code>
       */
      public GameSystemTest.Test2.HeartMsgOrBuilder getTestHeartOrBuilder() {
        if (testHeartBuilder_ != null) {
          return testHeartBuilder_.getMessageOrBuilder();
        } else {
          return testHeart_ == null ?
              GameSystemTest.Test2.HeartMsg.getDefaultInstance() : testHeart_;
        }
      }
      /**
       * <code>.GameSystemTest.HeartMsg testHeart = 24;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          GameSystemTest.Test2.HeartMsg, GameSystemTest.Test2.HeartMsg.Builder, GameSystemTest.Test2.HeartMsgOrBuilder> 
          getTestHeartFieldBuilder() {
        if (testHeartBuilder_ == null) {
          testHeartBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              GameSystemTest.Test2.HeartMsg, GameSystemTest.Test2.HeartMsg.Builder, GameSystemTest.Test2.HeartMsgOrBuilder>(
                  getTestHeart(),
                  getParentForChildren(),
                  isClean());
          testHeart_ = null;
        }
        return testHeartBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:GamePlayerTest.TestMsg)
    }

    // @@protoc_insertion_point(class_scope:GamePlayerTest.TestMsg)
    private static final GamePlayerTest.Protocol.TestMsg DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new GamePlayerTest.Protocol.TestMsg();
    }

    public static GamePlayerTest.Protocol.TestMsg getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TestMsg>
        PARSER = new com.google.protobuf.AbstractParser<TestMsg>() {
      @java.lang.Override
      public TestMsg parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TestMsg(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TestMsg> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TestMsg> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public GamePlayerTest.Protocol.TestMsg getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TestMsg2OrBuilder extends
      // @@protoc_insertion_point(interface_extends:GamePlayerTest.TestMsg2)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>int32 testInt32 = 1;</code>
     * @return The testInt32.
     */
    int getTestInt32();
  }
  /**
   * Protobuf type {@code GamePlayerTest.TestMsg2}
   */
  public static final class TestMsg2 extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:GamePlayerTest.TestMsg2)
      TestMsg2OrBuilder {
  private static final long serialVersionUID = 0L;
    // Use TestMsg2.newBuilder() to construct.
    private TestMsg2(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TestMsg2() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new TestMsg2();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private TestMsg2(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              testInt32_ = input.readInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return GamePlayerTest.Protocol.internal_static_GamePlayerTest_TestMsg2_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return GamePlayerTest.Protocol.internal_static_GamePlayerTest_TestMsg2_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              GamePlayerTest.Protocol.TestMsg2.class, GamePlayerTest.Protocol.TestMsg2.Builder.class);
    }

    public static final int TESTINT32_FIELD_NUMBER = 1;
    private int testInt32_;
    /**
     * <code>int32 testInt32 = 1;</code>
     * @return The testInt32.
     */
    @java.lang.Override
    public int getTestInt32() {
      return testInt32_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (testInt32_ != 0) {
        output.writeInt32(1, testInt32_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (testInt32_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, testInt32_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof GamePlayerTest.Protocol.TestMsg2)) {
        return super.equals(obj);
      }
      GamePlayerTest.Protocol.TestMsg2 other = (GamePlayerTest.Protocol.TestMsg2) obj;

      if (getTestInt32()
          != other.getTestInt32()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TESTINT32_FIELD_NUMBER;
      hash = (53 * hash) + getTestInt32();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static GamePlayerTest.Protocol.TestMsg2 parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static GamePlayerTest.Protocol.TestMsg2 parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static GamePlayerTest.Protocol.TestMsg2 parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static GamePlayerTest.Protocol.TestMsg2 parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static GamePlayerTest.Protocol.TestMsg2 parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static GamePlayerTest.Protocol.TestMsg2 parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static GamePlayerTest.Protocol.TestMsg2 parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static GamePlayerTest.Protocol.TestMsg2 parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static GamePlayerTest.Protocol.TestMsg2 parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static GamePlayerTest.Protocol.TestMsg2 parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static GamePlayerTest.Protocol.TestMsg2 parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static GamePlayerTest.Protocol.TestMsg2 parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(GamePlayerTest.Protocol.TestMsg2 prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code GamePlayerTest.TestMsg2}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:GamePlayerTest.TestMsg2)
        GamePlayerTest.Protocol.TestMsg2OrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return GamePlayerTest.Protocol.internal_static_GamePlayerTest_TestMsg2_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return GamePlayerTest.Protocol.internal_static_GamePlayerTest_TestMsg2_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                GamePlayerTest.Protocol.TestMsg2.class, GamePlayerTest.Protocol.TestMsg2.Builder.class);
      }

      // Construct using GamePlayerTest.Protocol.TestMsg2.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        testInt32_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return GamePlayerTest.Protocol.internal_static_GamePlayerTest_TestMsg2_descriptor;
      }

      @java.lang.Override
      public GamePlayerTest.Protocol.TestMsg2 getDefaultInstanceForType() {
        return GamePlayerTest.Protocol.TestMsg2.getDefaultInstance();
      }

      @java.lang.Override
      public GamePlayerTest.Protocol.TestMsg2 build() {
        GamePlayerTest.Protocol.TestMsg2 result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public GamePlayerTest.Protocol.TestMsg2 buildPartial() {
        GamePlayerTest.Protocol.TestMsg2 result = new GamePlayerTest.Protocol.TestMsg2(this);
        result.testInt32_ = testInt32_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof GamePlayerTest.Protocol.TestMsg2) {
          return mergeFrom((GamePlayerTest.Protocol.TestMsg2)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(GamePlayerTest.Protocol.TestMsg2 other) {
        if (other == GamePlayerTest.Protocol.TestMsg2.getDefaultInstance()) return this;
        if (other.getTestInt32() != 0) {
          setTestInt32(other.getTestInt32());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        GamePlayerTest.Protocol.TestMsg2 parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (GamePlayerTest.Protocol.TestMsg2) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int testInt32_ ;
      /**
       * <code>int32 testInt32 = 1;</code>
       * @return The testInt32.
       */
      @java.lang.Override
      public int getTestInt32() {
        return testInt32_;
      }
      /**
       * <code>int32 testInt32 = 1;</code>
       * @param value The testInt32 to set.
       * @return This builder for chaining.
       */
      public Builder setTestInt32(int value) {
        
        testInt32_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 testInt32 = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearTestInt32() {
        
        testInt32_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:GamePlayerTest.TestMsg2)
    }

    // @@protoc_insertion_point(class_scope:GamePlayerTest.TestMsg2)
    private static final GamePlayerTest.Protocol.TestMsg2 DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new GamePlayerTest.Protocol.TestMsg2();
    }

    public static GamePlayerTest.Protocol.TestMsg2 getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TestMsg2>
        PARSER = new com.google.protobuf.AbstractParser<TestMsg2>() {
      @java.lang.Override
      public TestMsg2 parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TestMsg2(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TestMsg2> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TestMsg2> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public GamePlayerTest.Protocol.TestMsg2 getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_GamePlayerTest_TestMsg_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_GamePlayerTest_TestMsg_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_GamePlayerTest_TestMsg_TestMapEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_GamePlayerTest_TestMsg_TestMapEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_GamePlayerTest_TestMsg_TestMsg3_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_GamePlayerTest_TestMsg_TestMsg3_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_GamePlayerTest_TestMsg2_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_GamePlayerTest_TestMsg2_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\016protocol.proto\022\016GamePlayerTest\032\013test2." +
      "proto\"\215\006\n\007TestMsg\022\r\n\005testF\030\001 \001(\002\022\022\n\005test" +
      "D\030\002 \001(\001H\000\210\001\001\022\021\n\ttestInt32\030\003 \001(\005\022\021\n\ttestI" +
      "nt64\030\004 \001(\003\022\022\n\ntestSInt32\030\005 \001(\021\022\022\n\ntestSI" +
      "nt64\030\006 \001(\022\022\020\n\010testUInt\030\007 \001(\r\022\021\n\ttestULon" +
      "g\030\010 \001(\004\022\023\n\013testFixed32\030\t \001(\007\022\023\n\013testFixe" +
      "d64\030\n \001(\006\022\024\n\014testSFixed32\030\013 \001(\017\022\024\n\014testS" +
      "Fixed64\030\014 \001(\020\022\020\n\010testBool\030\r \001(\010\022\017\n\007testS" +
      "tr\030\016 \001(\t\022\021\n\ttestBytes\030\017 \001(\014\022\017\n\007listInt\030\020" +
      " \003(\005\0225\n\007testMap\030\021 \003(\0132$.GamePlayerTest.T" +
      "estMsg.TestMapEntry\022*\n\010testEnum\030\022 \001(\0162\030." +
      "GamePlayerTest.TestEnum\022*\n\010testMsg2\030\023 \001(" +
      "\0132\030.GamePlayerTest.TestMsg2\0222\n\010testMsg3\030" +
      "\024 \001(\0132 .GamePlayerTest.TestMsg.TestMsg3\022" +
      "4\n\ttestEnum2\030\025 \001(\0162!.GamePlayerTest.Test" +
      "Msg.TestEnum2\022\027\n\017testBool2123123\030\027 \001(\010\022+" +
      "\n\ttestHeart\030\030 \001(\0132\030.GameSystemTest.Heart" +
      "Msg\032.\n\014TestMapEntry\022\013\n\003key\030\001 \001(\005\022\r\n\005valu" +
      "e\030\002 \001(\t:\0028\001\032\035\n\010TestMsg3\022\021\n\ttestInt32\030\001 \001" +
      "(\005\"!\n\tTestEnum2\022\n\n\006NORMAL\020\000\022\010\n\004BOSS\020\001B\010\n" +
      "\006_testDJ\004\010\026\020\027R\016testInt3233333\"\035\n\010TestMsg" +
      "2\022\021\n\ttestInt32\030\001 \001(\005* \n\010TestEnum\022\n\n\006NORM" +
      "AL\020\000\022\010\n\004BOSS\020\005b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          GameSystemTest.Test2.getDescriptor(),
        });
    internal_static_GamePlayerTest_TestMsg_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_GamePlayerTest_TestMsg_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_GamePlayerTest_TestMsg_descriptor,
        new java.lang.String[] { "TestF", "TestD", "TestInt32", "TestInt64", "TestSInt32", "TestSInt64", "TestUInt", "TestULong", "TestFixed32", "TestFixed64", "TestSFixed32", "TestSFixed64", "TestBool", "TestStr", "TestBytes", "ListInt", "TestMap", "TestEnum", "TestMsg2", "TestMsg3", "TestEnum2", "TestBool2123123", "TestHeart", "TestD", });
    internal_static_GamePlayerTest_TestMsg_TestMapEntry_descriptor =
      internal_static_GamePlayerTest_TestMsg_descriptor.getNestedTypes().get(0);
    internal_static_GamePlayerTest_TestMsg_TestMapEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_GamePlayerTest_TestMsg_TestMapEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_GamePlayerTest_TestMsg_TestMsg3_descriptor =
      internal_static_GamePlayerTest_TestMsg_descriptor.getNestedTypes().get(1);
    internal_static_GamePlayerTest_TestMsg_TestMsg3_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_GamePlayerTest_TestMsg_TestMsg3_descriptor,
        new java.lang.String[] { "TestInt32", });
    internal_static_GamePlayerTest_TestMsg2_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_GamePlayerTest_TestMsg2_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_GamePlayerTest_TestMsg2_descriptor,
        new java.lang.String[] { "TestInt32", });
    GameSystemTest.Test2.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
